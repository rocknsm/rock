---
- hosts: all
  vars:
    rock_debug: "{{ lookup('env', 'DEBUG') }}"
    http_proxy: "{{ lookup('env','http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
  tasks:
  - name: Get default settings
    include_vars: rocknsm_config.dist.yml
  - name: Get OS specific settings
    include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
      - "{{ ansible_distribution }}.yml"
    tags: vars
  - name: Apply override settings, if available
    include_vars: /etc/rocknsm/config.yml
    ignore_errors: true
    failed_when: false
  - name: Debug variables
    import_tasks: debug.yml
    when: rock_debug is defined and rock_debug

  - include_role:
      name: common
  
  - include_role:
      name: common_sensor
      
    ######################################################
    ##################  GeoIP Databases  #################
    ######################################################
  - name: Configure GeoIP Update
    copy: src=GeoIP.conf dest=/etc/GeoIP.conf

    # There's an issue w/ geoipupdate when env is empty
  - name: Update GeoIP
    shell: >
      if [ "x$HTTP_PROXY" == "x" ]; then
          unset HTTP_PROXY;
      fi
      if [ "x$http_proxy" == "x" ]; then
          unset http_proxy;
      fi
      if [ "x$HTTPS_PROXY" == "x" ]; then
          unset HTTPS_PROXY;
      fi
      if [ "x$https_proxy" == "x" ]; then
          unset https_proxy;
      fi
      /usr/bin/geoipupdate
    args:
      creates: /usr/share/GeoIP/GeoLiteASNum.dat
    register: result
    failed_when: (result.rc != 0) and (result.rc != 1)

  - name: Create GeoIP symlinks
    file:
      src: "/usr/share/GeoIP/{{ item.src }}"
      dest: "/usr/share/GeoIP/{{ item.dest }}"
      force: yes
      state: link
    with_items:
      - { src: 'GeoLiteCity.dat', dest: 'GeoIPCity.dat' }
      - { src: 'GeoLiteCountry.dat', dest: 'GeoIPCountry.dat' }
      - { src: 'GeoLiteASNum.dat', dest: 'GeoIPASNum.dat' }
      - { src: 'GeoLiteCityv6.dat', dest: 'GeoIPCityv6.dat' }
      
  - include_role:
      name: suricata
        
  - include_role:
      name: docker
  
  - include_role:
      name: zookeeper
      
  - include_role:
      name: kafka
      
  - include_role:
      name: elasticsearch  
      
  - include_role:
      name: logstash
      
  - include_role:
      name: filebeats

  - include_role:
      name: bro
      
  - name: kibana
    include_role:
      name: kibana
      
  # TODO NEEDS TO BE TESTED     
#  - include_role:
#      name: stenographer
      
#  - include_role:
#      name: nginx
   
    ######################################################
    #################  ROCKNSM Scripts  ##################
    ######################################################
  - name: Install rock start script
    copy:
      src: rock_start
      dest: /usr/local/bin/rock_start
      mode: 0700
      owner: root
      group: root

  - name: Install rock stop script
    copy:
      src: rock_stop
      dest: /usr/local/bin/rock_stop
      mode: 0700
      owner: root
      group: root

  - name: Install rock status script
    copy:
      src: rock_status
      dest: /usr/local/bin/rock_status
      mode: 0755
      owner: root
      group: root

  - name: Create rock script symlinks
    file:
      src: "/usr/local/bin/{{ item.src }}"
      dest: "/usr/sbin/{{ item.dest }}"
      force: yes
      state: link
    with_items:
      - { src: 'rock_start', dest: 'rock_start' }
      - { src: 'rock_stop', dest: 'rock_stop' }
      - { src: 'rock_status', dest: 'rock_status' }

  # Training mode / Service mode not needed for AF_PACKET
  ######################################################
  ############### ROCKNSM Customization ################
  ######################################################
  - name: Install ROCK NSM /etc/issue
    copy:
      src: etc-issue.in
      dest: /etc/issue.in
      mode: 0644
      owner: root
      group: root

  - name: NetworkManager ROCK NSM hook
    copy:
      src: nm-issue-update
      dest: /etc/NetworkManager/dispatcher.d/50-rocknsm-issue-update
      mode: 0755
      owner: root
      group: root
      
  environment:
   http_proxy:  "{{ http_proxy }}"
   https_proxy: "{{ https_proxy }}"
   HTTP_PROXY:  "{{ http_proxy }}"
   HTTPS_PROXY: "{{ https_proxy }}"
   
  #######################################################
  #####################  Handlers  ######################
  #######################################################
# NOT CURRENTLY IN USE
#  handlers:
#    - name: force sync time
#      command: >
#        chronyc -a 'burst 3/4'; sleep 5; chronyc -a makestep
#
#    - name: configure monitor interfaces
#      shell: >
#        for intf in {{ rock_monifs | join(' ') }}; do
#          /sbin/ifup ${intf};
#        done
#
#    - name: create kafka bro topic
#      command: >
#        /opt/kafka/bin/kafka-topics.sh
#           --zookeeper 127.0.0.1:2181
#           --create
#           --replication-factor 1
#           --topic bro-raw
#           --partitions 1
#
#    - name: create kafka suricata topic
#      command: >
#        /opt/kafka/bin/kafka-topics.sh
#           --zookeeper 127.0.0.1:2181
#           --create
#           --replication-factor 1
#           --topic suricata-raw
#           --partitions 1
#
#    - name: create kafka fsf topic
#      command: >
#        /opt/kafka/bin/kafka-topics.sh
#           --zookeeper 127.0.0.1:2181
#           --create
#           --replication-factor 1
#           --topic fsf-raw
#           --partitions 1
