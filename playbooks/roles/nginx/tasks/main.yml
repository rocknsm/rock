  ######################################################
  ################### Setup nginx ######################
  ######################################################
---
-
  name: Install Nginx package
  yum:
    name: nginx
    state: installed

- name: Install ROCK nginx configuration
  template:
    src: templates/nginx-rock.conf.j2
    dest: /etc/nginx/conf.d/rock.conf
    mode: 0644
    owner: root
    group: root
  when: with_kibana

- name: Install nginx base configuration
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    mode: 0644
    owner: root
    group: root

- name: Enable nginx to perform proxy connect
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  when: with_kibana

- name: Create easy-rsa working dir
  file:
    path: /opt/easy-rsa
    state: directory
    mode: 0750
    owner: root
    group: root
  when: with_kibana

- name: Create easy-rsa keys dir
  file:
    path: /opt/easy-rsa/keys
    state: directory
    mode: 0750
    owner: root
    group: root
  when: with_kibana

- name: Create working copy of easy-rsa
  copy:
    src: /usr/share/easy-rsa/2.0/
    dest: /opt/easy-rsa/
    mode: 0750
    owner: root
    group: root
  when: with_kibana

- name: Apply easy-rsa vars template
  template:
    src: templates/easy-rsa-vars.j2
    dest: /opt/easy-rsa/vars
    mode: 0644
  when: with_kibana

- name: Generate and copy Kibana keys
  shell:
    cd /opt/easy-rsa ;
    touch keys/index.txt ;
    echo "1000" > keys/serial ;
    source ./vars && ./build-ca --batch >> /tmp/build_certs.log 2>&1 ;
    source ./vars && ./build-dh --batch >> /tmp/build_certs.log 2>&1 ;
    source ./vars && ./build-key-server --batch {{ rock_hostname }} >> /tmp/build_certs.log 2>&1 ;
    cat keys/{{ rock_hostname }}.crt >> /etc/pki/bundle.crt ;
    cat keys/ca.crt >> /etc/pki/bundle.crt ;
    cp keys/{{ rock_hostname }}.key /etc/pki/bundle.key ;
