---
# defaults file for rocknsm.docket
rocknsm_conf_dir: /etc/rocknsm
rocknsm_conf_user: root
rocknsm_conf_group: root

# How are we going to install docket?
# Currently supports one of: yumrepo, offline
# yumrepo sets up the RockNSM repo that hosts docket
# offline skips repo setup and assumes it's already configured
docket_install: yumrepo
docket_enable: true

# Application config
docket_debug: false
docket_testing: false
docket_secret: "{{ lookup('password', '/dev/null chars=letters,digits length=64') }}"
docket_session_cookie: DOCKET_SESSION
docket_sendfile: true
docket_logger: docket
docket_celery_url: redis://localhost:6379
docket_spool_dir: /var/spool/docket
docket_frontend_dir: /opt/rocknsm/docket/frontend
docket_uwsgi_socket: /run/docket/docket.socket
docket_no_redis: false
docket_long_ago: 24h

# Web server config
docket_tls: true
docket_user: docket
docket_group: docket

# An empty string defaults to all interfaces on IPv4
docket_listen_ip: "0.0.0.0"
docket_listen_port: "{{ 8443 if docket_tls else 8080 }}"
docket_host: "{{ hostvars[groups['docket'][0]]['ansible_hostname'] }}"

docket_web_server: lighttpd
docket_web_pemfile: "/etc/pki/tls/private/lighttpd_docket.pem"
docket_web_dhparams: "/etc/pki/tls/misc/lighttpd_dh.pem"
docket_web_server_name: "{{ansible_fqdn}}"
docket_web_user: lighttpd
docket_url_apppath: /app/docket
docket_url_resultspath: /results
docket_url_pattern: "(^/results/|^/app/docket/)"

# Vars to generate keys/certs
docket_x509_dir: /etc/pki/docket
docket_x509_key: "{{ docket_x509_dir }}/docket_{{ hostvars[groups['docket'][0]]['ansible_default_ipv4']['address'] }}_key.pem"
docket_x509_cn: "{{ docket_host }}_docket"
docket_x509_o: Stenographer
docket_x509_c: XX
docket_x509_user: root
docket_x509_group: docket

# These should be overridden by host-specific vars
steno_host: "{{ hostvars[groups['stenographer'][0]]['ansible_default_ipv4']['address'] }}"
steno_sensor: "{{ hostvars[groups['stenographer'][0]]['ansible_hostname'] }}"
steno_port: 1234
steno_certs_dir: /etc/stenographer/certs
steno_ca_cert: "{{steno_certs_dir}}/ca_cert.pem"
steno_ca_key: "{{steno_certs_dir}}/ca_key.pem"

# This is used to generate the config for docket on
# where to connect and how to authenticate
docket_steno_instances:
  - { host: "{{ steno_host}}", sensor: "{{ steno_sensor }}", port: "{{ steno_port }}", key: "{{ docket_x509_key }}", cert: "{{docket_x509_dir}}/docket-{{ docket_host }}_sensor-{{ steno_sensor }}_cert.pem", ca: "{{ docket_x509_dir }}/{{ steno_sensor }}_ca_cert.pem" }
