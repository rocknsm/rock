---

- name: Install packages
  yum:
    name:
      - java-11-openjdk-headless
      - elasticsearch
    state: installed
  register: es_install

- name: Create elasticsearch directory
  file:
    path: "{{ es_data_dir }}"
    mode: 0755
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    state: directory

- name: Setup elasticsearch config
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: "{{ es_group }}"
    mode: 0640
  register: es_config

- name: Create elasticsearch systemd override dir
  file:
    path: /etc/systemd/system/elasticsearch.service.d
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Enable elasticsearch memlock in service override
  copy:
    content: "{{ es_memlock_override }}"
    dest: /etc/systemd/system/elasticsearch.service.d/override.conf
    mode: 0644
    owner: root
    group: root
  register: es_memlock

- name: Setup elasticsearch JVM options
  template:
    src: templates/es-jvm.options.j2
    dest: /etc/elasticsearch/jvm.options
    mode: 0640
    owner: root
    group: "{{ es_group }}"
  register: es_jvm

- name: Reload systemd
  systemd:
    daemon_reload: true
  when: es_memlock.changed
  tags:
    - skip_ansible_lint  # [503] Tasks that run when changed should be handlers

- name: Discover facts about data mount
  set_fact:
    rock_mounts:
      mount: "{{ item.mount }}"
      device: "{{ item.device }}"
      size_total: "{{ item.size_total }}"
  loop:
    "{{ ansible_mounts }}"
  when: (item.mount == default_mount and rock_mounts is not defined)

- name: Determining if quotas are enabled
  command: awk /prjquota/ /etc/fstab
  register: prjquota

#- debug:
#    msg: "{{prjquota}}"

- name: Create elasticsearch quota project id
  getent:
    database: group
    split: ':'
    key: elasticsearch
  when: rock_mounts is defined and (prjquota.stdout|length>0)

- name: Map elasticsearch quota project id to name
  lineinfile:
    create: yes
    state: present
    insertafter: EOF
    path: /etc/projid
    line: "elasticsearch:{{ getent_group.elasticsearch[1] }}"
  when: rock_mounts is defined and (prjquota.stdout|length>0)

- name: Define elasticsearch quota project directories
  lineinfile:
    create: yes
    state: present
    insertafter: EOF
    path: /etc/projects
    line: "{{ getent_group.elasticsearch[1] }}:{{ rock_mounts.mount }}/elasticsearch"
  when: rock_mounts is defined and (prjquota.stdout|length>0)

- name: set elasticsearch weight
  set_fact:
    elastic_weight: "{{ rock_services | selectattr('name', 'equalto', 'elasticsearch') | map(attribute='quota_weight') | first }}"
  when: rock_mounts is defined and (prjquota.stdout|length>0)

- name: set elasticsearch quota if not user defined
  set_fact:
    elasticsearch_quota: "{{ rock_mounts.size_total | int / xfs_quota_weight | int * elastic_weight | int}}"
  when: rock_mounts is defined and (prjquota.stdout|length>0)

- name: set elasticsearch project quota
  xfs_quota:
    type: project
    name: elasticsearch
    bhard: "{{ elasticsearch_quota }}"
    state: present
    mountpoint: "{{ rock_mounts.mount }}"
  when: rock_mounts is defined and (prjquota.stdout|length>0)

- name: Enable and start elasticsearch
  service:
    name: elasticsearch
    state: "started"
    enabled: "{{ 'true' if rock_services | selectattr('name', 'equalto', 'elasticsearch') | map(attribute='enabled') | bool else 'false' }}"

- name: Create internal firewall zone
  firewalld:
    state: present
    zone: internal
    permanent: true
  register: result

- name: Reload firewalld to load zone
  service:
    name: firewalld
    state: restarted
  when: result.changed
  tags:
    - skip_ansible_lint  # [503] Tasks that run when changed should be handlers

- name: Configure firewall ports for internal elastic communication
  firewalld:
    port: "{{ item.1 }}/tcp"
    permanent: true
    state: enabled
    immediate: true
    source: "{{ hostvars[item.0]['ansible_default_ipv4']['address'] }}"
    zone: work  # This should be a different zone, but leaving this here for now
  when: (groups['elasticsearch']|union(groups['logstash'])|union(groups['kibana']))| count > 1
  loop: "{{ (groups['elasticsearch']|union(groups['logstash'])|union(groups['kibana'])) | product([9200, 9300]) | list }}"

- name: Determine if Elasticsearch needs to be restarted
  set_fact:
    es_restart: true
  when: "(es_config.changed or es_memlock.changed or es_jvm.changed) and not es_install.changed"
  tags:
    - skip_ansible_lint  # [503] Tasks that run when changed should be handlers

...
